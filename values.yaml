# Default values for rag-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: niteshmore22/cve-llm
  pullPolicy: IfNotPresent
  tag: "1.0.1"

ingress:
  enabled: false

nameOverride: ""
fullnameOverride: "rag-service"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "rag-service-account"

configmap:
  ES_HOST_URL: "https://elasticsearch-es-masters.elastic-stack.svc.cluster.local:9200"
  ES_USERNAME: "nitesh"
  APP_PORT: 8000
  ELASTICSEARCH_INDEX: "cves"
  LLM_SERVER_URL: "http://ollama.llm-service:11483/api/generate" 

secrets:
    type: Opaque
    ES_PASSWORD: "password"
    HUGGINGFACE_TOKEN: "token"

podDisruptionBudget:
  enabled: false
  maxUnavailable: 1

podAnnotations: {}
podLabels:
  app: rag-service

pdb:
  create: true
  maxUnavailable: 1

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8000

certificates:
  secretName: grafana-tls
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
  commonName: api.pritesh-nimje.me
  dnsNames: api.pritesh-nimje.me

imagePullSecrets:
    type: kubernetes.io/dockerconfigjson
    name: regcred
    dockerconfigjson: askfnkasfhnasjklfblasjfhlasfhlakssfhklas


resources:
  limits:
    memory: 1024Mi
  requests:
    memory: 512Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
